SELECT문은 항상 SELECT 절과 FROM절을 같이 기술합니다.
다른 조건이 추가로 필요하다면 WHERE절에 기술하고 데이터가 출력되는 순서를 정하려면
ORDER BY절을 기술합니다.

SELECT [DISTINCT] 열 이름 [or 별칭]
FROM 테이블이름
[WHERE 조건식]
[ORDER BY 열 이름 [ASC or DESC]];

1. SELECT는 예약어이면서 열을 선택하기 위한 명령어입니다.
2. 대괄호 [] 안에 들어간 항목은 선택 사항으로 생략할 수 있습니다.
3. 문장을 모두 작성했다면 문장이 끝났다는 의미로 세미콜론을 입력합니다.
    만약, 세미콜론이 없다면 SQL문이 아직 끝나지 않았다고 판단합니다.    
    단, SQL 문장이 하나뿐이라면 세미콜론을 입력하지 않아도 SQL문이 실행됩니다.

✅ SQL문 작성 규칙
1. SQL문은 대문자와 소문자를 구별하지 않습니다. (SELECT === select)
2. SQL문은 한 줄 또는 여러 줄로 작성할 수 있습니다.
    - 가독성과 편집의 용이성을 위해 내요잉 달라지면 줄을 나눕니다.
    - 명령어는 여러 줄로 나눌 수 없습니다. SE LECT (X)
3. 코드 수준에 따른 들여쓰기는 SQL문장을 좀 더 읽기 쉽게 합니다.
4. 명령어를 대문자로 작성하고 나머지를 소문자로 작성하면 가독성이 좋아집니다.

✅ 전체 데이터 조회하기
SELECT 명령어는 데이터를 선택(=조회)한다는 의미이며, 단지 선택된 데이터를 화면에 출력한다는 것입니다.
출력만 할 뿐 실제 데이터의 값이 데이터베이스에 반영(삽입, 삭제, 갱신)되지 않습니다.

SELECT * 
FROM employees;
- SELECT 명령어 다음 별표를 입력해서 모든 열을 조회합니다. (*은 모든 열 이라는 의미)
- FROM은 ~의 테이블로부터 라는 의미이므로 바로 뒤에 테이블 이름을 기술합니다.

✅ 원하는 열만 조회하고 정렬하기
SELECT employee_id, first_name_ last_name
FROM employees;
- 3종류의 컬럼(employee_id, first_name_ last_name)에 대한 모든 row를 선택
- 열 이름은 쉼표(,)를 붙여 계속해서 나열할 수 있으며 결과는 나열한 순서대로 출력됩니다.
- 모든 열을 조회하는 * 대신 열 이름을 모두 나열해도 같은 결과가 출력됩니다.

⭕ ORDER BY
ORDER BY 명령문을 사용하면 행에 대해 정렬 순서를 지정할 수 있습니다.
ORDER BY 열 이름 [ASC or DESC]
- ASC : 오름차순 정렬, 기본 정렬 방법이므로 ASC를 입력하지 않아도 오름차순으로 정렬
- DESC : 내림차순 정렬